{"version":3,"sources":["components/PokemonCard.js","config/index.js","containers/Pokedex.js","components/AppNavigator.js","redux/actions.js","containers/PokemonDetails.js","redux/reducer.js","redux/store.js","containers/Favourites.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","card","cursor","backgroundColor","color","cardMedia","margin","width","height","cardContent","textAlign","link","textDecoration","PokemonCard","props","classes","pokemon","image","id","name","Grid","item","xs","md","lg","sm","to","className","Card","CardMedia","CardContent","Typography","variant","POKEMON_API_URL","pokedexContainer","padding","Pokedex","useState","pokemonData","setPokemonData","useEffect","axios","get","then","response","status","results","data","newPokemonData","map","index","pokemonObject","url","push","Box","container","spacing","CircularProgress","style","marginTop","AppBar","title","AppNavigator","position","Toolbar","marginLeft","TOGGLE_FAVOURITE","PokemonDetails","state","match","this","params","setState","found","favourites","p","sprites","weight","types","textTitle","pokemonImage","src","front_default","pokemonInfoContainer","seperator","Button","favourite","onClick","toggleFavourite","favouriteChecker","fontSize","text","pokemonType","type","Component","withStyles","borderRadius","paddingTop","textTransform","fontFamily","bottom","connect","dispatch","payload","initialData","pokemonReducer","action","pokemonFromFavourite","find","favPokemon","filter","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","Favourites","App","loading","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a29a3778.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\n// công thức makeStyles((theme) => ({})\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    cursor: \"pointer\",\n    backgroundColor: \"#f1f8e9\",\n    color: \"black\",\n    \"&:hover\": {\n      backgroundColor: \"rgb(90, 90 ,90)\",\n    },\n  },\n  cardMedia: {\n    margin: \"auto\",\n    width: 130,\n    height: 130,\n  },\n  cardContent: {\n    textAlign: \"center\",\n  },\n  link: {\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function PokemonCard(props) {\n  const classes = useStyles();\n  const { pokemon, image } = props;\n  const { id, name } = pokemon;\n  return (\n    // mỗi item phải có unique key id\n    <Grid item xs={12} md={2} lg={2} sm={4} key={id}>\n      {/* link to pokemon details */}\n      <Link to={\"/pokemon/\" + id} className={classes.link}>\n        <Card className={classes.card}>\n          <CardMedia className={classes.cardMedia} image={image}></CardMedia>\n          <CardContent className={classes.cardContent}>\n            <Typography variant=\"h4\">{name}</Typography>\n          </CardContent>\n        </Card>\n      </Link>\n    </Grid>\n  );\n}\n","export const POKEMON_API_URL = \"https://pokeapi.co/api/v2/pokemon\";\nexport const IMAGE_API_URL =\n  \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\";\n","import { Box, CircularProgress, Grid, makeStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport PokemonCard from \"../components/PokemonCard\";\nimport { IMAGE_API_URL, POKEMON_API_URL } from \"../config\";\n\nconst useStyles = makeStyles((theme) => ({\n  pokedexContainer: {\n    textAlign: \"center\",\n    padding: \"70px 10px 10px 10px\",\n    backgroundColor: \"#90caf9\",\n  },\n}));\n\nexport default function Pokedex() {\n  const classes = useStyles();\n  // truy cập data bên ngoài hook\n  const [pokemonData, setPokemonData] = useState(null);\n  useEffect(() => {\n    // limit 204 pokemon\n    axios.get(POKEMON_API_URL + \"?limit=204\").then((response) => {\n      // check http responses, trong phạm vi này thì success get data, store trong hook\n      if (response.status >= 200 && response.status < 403) {\n        const { results } = response.data;\n        // ban đầu sẽ rỗng để khi có đc data sẽ push vào\n        let newPokemonData = [];\n        results.map((pokemon, index) => {\n          index++;\n          let pokemonObject = {\n            id: index,\n            url: IMAGE_API_URL + index + \".png\",\n            name: pokemon.name,\n          };\n          newPokemonData.push(pokemonObject);\n        });\n        setPokemonData(newPokemonData);\n        // sau khi lấy đc data mới rồi sẽ tạo hook useState(null)\n      }\n    });\n  }, []);\n  return (\n    <Box>\n      {/* check có data ko thì mới map() */}\n      {pokemonData ? (\n        <Grid className={classes.pokedexContainer} container spacing={3}>\n          {pokemonData.map((pokemon) => {\n            return (\n              <PokemonCard\n                pokemon={pokemon}\n                image={pokemon.url}\n                key={pokemon.id}\n              />\n            );\n          })}\n        </Grid>\n      ) : (\n        <CircularProgress style={{ marginTop: 100 }} />\n      )}\n    </Box>\n  );\n}\n{\n}\n/* props là pokemon và imagae */\n","import React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  AppBar: {\n    backgroundColor: \"#52384B\",\n  },\n  link: {\n    textDecoration: \"none\",\n  },\n  title: {\n    cursor: \"pointer\",\n    color: \"White\",\n  },\n}));\n\nexport default function AppNavigator() {\n  //use useStyle to style Class Component in Material Ui\n  const classes = useStyles();\n\n  return (\n    <AppBar className={classes.AppBar} position=\"fixed\">\n      <Toolbar>\n        <Link to=\"/\" className={classes.link}>\n          <Typography className={classes.title} variant=\"h5\">\n            Pokemon\n          </Typography>\n        </Link>\n        <Link to=\"/favourites\" className={classes.link}>\n          <Typography\n            className={classes.title}\n            variant=\"h5\"\n            style={{ marginLeft: 35 }}\n          >\n            Favourites\n          </Typography>\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","export const TOGGLE_FAVOURITE = \"TOGGLE_FAVOURITE\"\n\nexport const toggleFavourite = (pokemon) => ({\n    type: TOGGLE_FAVOURITE,\n    payload: pokemon\n})","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { POKEMON_API_URL } from \"../config\";\nimport {\n  CircularProgress,\n  Box,\n  withStyles,\n  Typography,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { connect } from \"react-redux\";\nimport { toggleFavourite } from \"../redux/actions\";\n\nconst styles = (theme) => ({\n  pokedexContainer: {\n    height: \"84vh\",\n    backgroundColor: \"#90caf9\",\n    color: \"black\",\n    marginTop: 75,\n    textAlign: \"center\",\n    borderRadius: 5,\n    paddingTop: 30,\n  },\n  textTitle: {\n    textTransform: \"upperCase\",\n    fontFamily: \"Fantasy\",\n  },\n  pokemonImage: {\n    width: \"250px\",\n    height: \"250px\",\n  },\n  pokemonInfoContainer: {\n    bottom: 60,\n    position: \"absolute\",\n    width: \"100%\",\n  },\n  seperator: {\n    height: \"0.01mm\",\n    width: \"95%\",\n  },\n  favourite: {\n    height: 50,\n    width: 50,\n    marginTop: 15,\n  },\n  text: {\n    fontSize: 30,\n  },\n});\n\n// lấy link route bên App.js để tạo ra 1 component mới\nclass PokemonDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemon: null,\n    };\n  }\n\n  // giống vs useEffect nhưng componentDidMount dùng class component, còn useEffect dùng React Hook và function component\n  componentDidMount() {\n    const { match } = this.props;\n    const { id } = match?.params;\n    axios.get(POKEMON_API_URL + \"/\" + id).then((response) => {\n      if (response.status >= 200 && response.status < 403) {\n        this.setState({ pokemon: response.data });\n      }\n    });\n  }\n\n  favouriteChecker(pokemon) {\n    let found = false;\n    this.props.favourites?.map((p) => {\n      if (p.id === pokemon.id) {\n        found = true;\n      }\n    });\n    return found;\n  }\n  render() {\n    const { classes } = this.props;\n    const { pokemon } = this.state;\n    if (pokemon) {\n      const { name, sprites, height, weight, types } = pokemon;\n      return (\n        <Box>\n          {/* để style thì phải dùng classes component */}\n          <Box className={classes.pokedexContainer}>\n            <Typography className={classes.textTitle} variant=\"h1\">\n              {name}\n            </Typography>\n            <img className={classes.pokemonImage} src={sprites.front_default} />\n            <Box className={classes.pokemonInfoContainer}>\n              <hr className={classes.seperator} />\n              <Grid container>\n                <Grid item md={1}>\n                  <Button\n                    className={classes.favourite}\n                    onClick={() => this.props.toggleFavourite(pokemon)}\n                  >\n                    <FavoriteIcon\n                      style={{\n                        color: this.favouriteChecker(pokemon) ? \"red\" : \"white\",\n                        fontSize: 50,\n                      }}\n                    />\n                  </Button>\n                </Grid>\n                <Grid item md={2}>\n                  <Typography className={classes.text}>\n                    Name\n                    <br />\n                    {name}\n                  </Typography>\n                </Grid>\n                <Grid item md={2}>\n                  <Typography className={classes.text}>\n                    Height\n                    <br />\n                    {height}m\n                  </Typography>\n                </Grid>\n                <Grid item md={2}>\n                  <Typography className={classes.text}>\n                    Weight\n                    <br />\n                    {weight}kg\n                  </Typography>\n                </Grid>\n                {types.map((pokemonType) => {\n                  const { name } = pokemonType.type;\n                  return (\n                    <Grid item md={2}>\n                      <Typography className={classes.text}>\n                        Type\n                        <br />\n                        {name}\n                      </Typography>\n                    </Grid>\n                  );\n                })}\n              </Grid>\n            </Box>\n          </Box>\n        </Box>\n      );\n    } else {\n      return <CircularProgress />;\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  favourites: state.favourites,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleFavourite: (pokemon) => dispatch(toggleFavourite(pokemon)),\n});\n\nexport default withStyles(styles)(\n  connect(mapStateToProps, mapDispatchToProps)(PokemonDetails)\n);\n","import { TOGGLE_FAVOURITE } from \"./actions\";\n\nconst initialData = {\n  favourites: [],\n};\n\nconst pokemonReducer = (state = initialData, action) => {\n  // check action type\n  switch (action.type) {\n    case TOGGLE_FAVOURITE:\n      let pokemon = action.payload;\n      let pokemonFromFavourite = state.favourites.find(\n        (favPokemon) => pokemon.id === favPokemon.id\n      );\n      return {\n        ...state,\n        favourites: pokemonFromFavourite\n          ? [\n              ...state.favourites.filter(\n                (pokemon) => pokemon.id !== pokemonFromFavourite.id\n              ),\n            ]\n          : [...state.favourites, action.payload],\n      };\n    default:\n      return state;\n  }\n};\nexport default pokemonReducer;\n","import { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport rootReducer from './reducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\nexport let store = createStore(persistedReducer)\nexport let persistor = persistStore(store)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Box, withStyles, Grid } from \"@material-ui/core\";\nimport PokemonCard from \"../components/PokemonCard\";\n\nconst styles = (theme) => ({\n  pokedexContainer: {\n    height: \"100vh\",\n    backgroundColor: \"rgb(68, 68, 68)\",\n    paddingTop: 80,\n    textAlign: \"center\",\n  },\n});\n\nexport class Favourites extends Component {\n  render() {\n    const { classes, favourites } = this.props;\n    return (\n      <Box>\n        <Grid container spacing={2} className={classes.pokedexContainer}>\n          {favourites.map((pokemon) => {\n            return (\n              <PokemonCard\n                pokemon={pokemon}\n                key={pokemon.id}\n                image={pokemon.sprites.front_default}\n              />\n            );\n          })}\n        </Grid>\n      </Box>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  favourites: state.favourites,\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default withStyles(styles)(\n  connect(mapStateToProps, mapDispatchToProps)(Favourites)\n);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Pokedex from \"./containers/Pokedex\";\nimport AppNavigator from \"./components/AppNavigator\";\nimport PokemonDetails from \"./containers/PokemonDetails\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Favourites from \"./containers/Favourites\";\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router>\n          <AppNavigator />\n          <Route exact path=\"/\" component={Pokedex} />\n          {/* go to pokemon details */}\n          <Route exact path=\"/pokemon/:id\" component={PokemonDetails} />\n          <Route exact path=\"/favourites\" component={Favourites} />\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}